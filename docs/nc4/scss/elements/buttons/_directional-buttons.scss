
// Directional buttons style declaration
.btn {
    //# General styles
    &.left, &.right {
        position: relative;

        //### Defining the tip/arrow of the button, on normal dimension (height: 30px)
        &::before {
            display: block;
            position: absolute;
            content: '';

            width: rem(18px);
            height: rem(18px);
            top: rem(6px);

            background-color: var(--button-bg);

            transform: rotate(45deg) skew(11deg, 11deg);
        } // END '.btn.right::before' and '.btn.left::before'

        // hover state
        &:hover {
            &::before { background-color: var(--button-hover-bg); }
        }

        // pressed/selected state
        &:active, &.active {
            border-color: var(--button-active-border-color);

            &::before { background-color: var(--button-active-bg); }
        }

        // disabled state
        &:disabled, &.disabled,
        :disabled &, .disabled & {
            border-color: var(--button-disabled-border-color);

            &::before { background-color: var(--button-disabled-bg); }
        }

        //### and, on big buttons (height: rem(48px))
        &.btn-lg {
            &::before {
                width: rem(28px);
                height: rem(28px);
                top: rem(9px);

                transform: rotate(45deg) skew(11deg, 11deg);
            }
        } // END '.btn.btn-lg.right' and '.btn.btn-lg.left'


        //## General style for Directional button primary theme
        &.btn-primary {
            &::before {
                background-color: var(--button-primary-bg);
                box-shadow: none;
            }

            // hover state
            &:hover {
                &::before {
                    background-color: var(--button-primary-hover-bg);
                    box-shadow: none;
                }
            }

            // pressed/selected state
            &:active, &.active {
                border-color: var(--button-primary-active-border-color);

                &::before { background-color: var(--button-primary-active-bg); }
            }

            // disabled state
            &:disabled, &.disabled,
            :disabled &, .disabled & {
                &::before { background-color: var(--button-disabled-bg); }
            }
        } // END '.btn.btn-primary.right' and '.btn.btn-primary.left'
    } // END '.btn.right' and '.btn.left'

    //# Defining the button tip/arrow for different state of the button
    //## Left button
    &.left {
        border-top-left-radius: rem(4px);
        border-bottom-left-radius: rem(4px);
        margin-left: $spacing-8;
        
        &::before {
            left: rem(-9px);

            border-left-color: var(--button-border-color);
            border-bottom-color: var(--button-border-color);
            box-shadow: inset rem(2px) rem(-2px) 0 rem(-1px) var(--button-border-color);
        }

        // hover state
        &:hover {
            &::before { box-shadow: inset rem(2px) rem(-2px) 0 rem(-1px) var(--button-hover-border-color); }
        }

        // focus state
        &:focus {
            &::before { box-shadow: inset rem(3px) rem(-3px) 0 rem(-1px) var(--button-focus-border-color); }
        }

        // pressed/selected state
        &:active, &.active {
            &::before { box-shadow: inset rem(2px) rem(-2px) 0 rem(-1px) var(--button-active-border-color); }
        }

        // disabled state
        &:disabled, &.disabled,
        :disabled &, .disabled & {
            &::before { box-shadow: inset rem(2px) rem(-2px) 0 rem(-1px) var(--button-disabled-border-color); }
        }

        // large dimensions
        &.btn-lg {
            border-top-left-radius: rem(3px);
            border-bottom-left-radius: rem(3px);
            margin-left: $spacing-16;

            &::before { left: rem(-14px); }
        } // END '.btn.btn-lg.left'


        //### Left button - primary theme
        &.btn-primary {
            &:focus {
                &::before { box-shadow: inset rem(3px) rem(-3px) 0 rem(-1px) var(--button-focus-border-color), inset rem(4px) rem(-4px) 0 rem(-1px) var(--neutral-05); }
            }
    
            &:active:focus {
                &::before { box-shadow: none; }
            }

            // disabled state
            &:disabled, &.disabled,
            :disabled &, .disabled & {
                &::before { box-shadow: inset rem(2px) rem(-2px) 0 rem(-1px) var(--button-disabled-border-color); }
            }
        } // END '.btn.btn-primary.left'
    } // END '.btn.left'


    //## Right buton
    &.right {
        border-top-right-radius: rem(4px);
        border-bottom-right-radius: rem(4px);
        margin-right: $spacing-12;
        
        &::before {
            right: rem(-9px);

            border-right-color: var(--button-border-color);
            border-top-color: var(--button-border-color);
            box-shadow: inset rem(-2px) rem(2px) 0 rem(-1px) var(--button-border-color);
        }

        // hover state
        &:hover {
            &::before { box-shadow: inset rem(-2px) rem(2px) 0 rem(-1px) var(--button-hover-border-color); }
        }

        // focus state
        &:focus {
            &::before { box-shadow: inset rem(-3px) rem(3px) 0 rem(-1px) var(--button-focus-border-color); }
        }

        // pressed/selected state
        &:active, &.active {
            &::before { box-shadow: inset rem(-2px) rem(2px) 0 rem(-1px) var(--button-active-border-color); }
        }

        // disabled state
        &:disabled, &.disabled,
        :disabled &, .disabled & {
            &::before { box-shadow: inset rem(-2px) rem(2px) 0 rem(-1px) var(--button-disabled-border-color); }
        }

        // large dimensions
        &.btn-lg {
            border-top-right-radius: rem(3px);
            border-bottom-right-radius: rem(3px);
            margin-right: $spacing-16;

            &::before { right: rem(-14px); }
        } // END '.btn.btn-lg.right'


        //### Right button - primary theme
        &.btn-primary {
            &:focus {
                &::before { box-shadow: inset rem(-3px) rem(3px) 0 rem(-1px) var(--button-primary-focus-border-color), inset rem(-4px) rem(4px) 0 rem(-1px) var(--button-primary-focus-inner-shadow-color); }
            }
    
            &:active:focus {
                &::before { box-shadow: none; }
            }

            // disabled state
            &:disabled, &.disabled,
            :disabled &, .disabled & {
                &::before { box-shadow: inset rem(-2px) rem(2px) 0 rem(-1px) var(--button-disabled-border-color); }
            }
        } // END '.btn.btn-primary.right'
    } // END '.btn.right'
} // END '.btn'
